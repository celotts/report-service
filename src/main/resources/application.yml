spring:
  application:
    name: ms-report
  profiles:
    active: ${PROFILE:default}
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://configuser:a501082a-0573-4ff0-9522-d5c3d4b2e859@localhost:7777}

server:
  port: 7070
  shutdown: ${SPRING_SERVER_SHUTDOWN:graceful}
  servlet:
    context-path: /ms-report

eureka:
  instance:
    instance-id: "${spring.application.name}:${random.value}:${server.port}"
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
    registerWithEureka: ${SPRING_EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
    fetchRegistry: ${SPRING_EUREKA_CLIENT_FETCH_REGISTRY:true}

# Configuración de Feign con tiempos de espera más largos
feign:
  client:
    config:
      default:
        connectTimeout: 500     # Timeout de conexión muy corto
        readTimeout: 500        # Timeout de lectura muy corto
        errorDecoder: customErrorDecoder
      patient-service:
        connectTimeout: 1000    # Timeout específico ligeramente más largo
        readTimeout: 1000       # Timeout de lectura para patient-service

  circuitbreaker:
    enabled: true

resilience4j:
  circuitbreaker:
    instances:
      patientServiceBreaker:
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 1000
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
ribbon:
  ServerListRefreshInterval: 3000
  ConnectTimeout: 1000
  ReadTimeout: 2000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  OkToRetryOnAllOperations: false

# Configuración específica de Ribbon para patient-service
patient-service:
  ribbon:
    listOfServers: 192.168.100.16:8082
    PreferSameZoneEureka: true